#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 445 0 26 3 12 #"#lang racket"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 7 #"srfi/41"
0 0 22 3 2 #") "
0 0 17 3 16 #"; Stream library"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 13 #"racket/pretty"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 19 3 24 #"\"derivative-parsers.rkt\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 19 #";;;; Python grammar"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 7 #"mk-tag?"
0 0 22 3 1 #" "
0 0 14 3 8 #"tag-name"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 5 #"token"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 3 #"eq?"
0 0 22 3 2 #" ("
0 0 14 3 3 #"car"
0 0 22 3 1 #" "
0 0 14 3 5 #"token"
0 0 22 3 2 #") "
0 0 14 3 8 #"tag-name"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"mk-value?"
0 0 22 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 5 #"token"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 9 #"predicate"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 22 3 1 #" "
0 0 14 3 5 #"token"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 4 #"NAME"
0 0 22 3 7 #"      ("
0 0 14 3 4 #"lang"
0 0 22 3 2 #" ("
0 0 14 3 4 #"@-->"
0 0 22 3 2 #" ("
0 0 14 3 5 #"token"
0 0 22 3 2 #" ("
0 0 14 3 7 #"mk-tag?"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"ID"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 4 #"NAME"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 31 #"                              ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 3 #") ("
0 0 14 3 14 #"string->symbol"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"NUMBER"
0 0 22 3 5 #"    ("
0 0 14 3 4 #"lang"
0 0 22 3 2 #" ("
0 0 14 3 4 #"@-->"
0 0 22 3 2 #" ("
0 0 14 3 5 #"token"
0 0 22 3 2 #" ("
0 0 14 3 5 #"and/c"
0 0 22 3 2 #" ("
0 0 14 3 7 #"mk-tag?"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"LIT"
0 0 22 3 3 #") ("
0 0 14 3 9 #"mk-value?"
0 0 22 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 3 #")) "
0 0 20 3 1 #"'"
0 0 14 3 6 #"NUMBER"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 31 #"                              ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 14 3 3 #"num"
0 0 22 3 2 #") "
0 0 14 3 3 #"num"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"STRING"
0 0 22 3 5 #"    ("
0 0 14 3 4 #"lang"
0 0 22 3 2 #" ("
0 0 14 3 4 #"@-->"
0 0 22 3 2 #" ("
0 0 14 3 5 #"token"
0 0 22 3 2 #" ("
0 0 14 3 5 #"and/c"
0 0 22 3 2 #" ("
0 0 14 3 7 #"mk-tag?"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"LIT"
0 0 22 3 3 #") ("
0 0 14 3 9 #"mk-value?"
0 0 22 3 1 #" "
0 0 14 3 7 #"string?"
0 0 22 3 3 #")) "
0 0 20 3 1 #"'"
0 0 14 3 6 #"STRING"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 31 #"                              ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 2 #") "
0 0 14 3 3 #"str"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"NEWLINE"
0 0 22 3 4 #"   ("
0 0 14 3 5 #"token"
0 0 22 3 2 #" ("
0 0 14 3 7 #"mk-tag?"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"NEWLINE"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 7 #"NEWLINE"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 9 #"ENDMARKER"
0 0 22 3 2 #" ("
0 0 14 3 5 #"token"
0 0 22 3 2 #" ("
0 0 14 3 7 #"mk-tag?"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"ENDMARKER"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 9 #"ENDMARKER"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"INDENT"
0 0 22 3 5 #"    ("
0 0 14 3 5 #"token"
0 0 22 3 2 #" ("
0 0 14 3 7 #"mk-tag?"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"INDENT"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 6 #"INDENT"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"DEDENT"
0 0 22 3 5 #"    ("
0 0 14 3 5 #"token"
0 0 22 3 2 #" ("
0 0 14 3 7 #"mk-tag?"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"DEDENT"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 6 #"DEDENT"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 8        1547 4 2 #"(\0"
2 #")\0"
308 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"de"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 3 #"ine"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 24 #"python-literal->language"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"   ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"     [("
7 #"wxtext\0"
3 2 #"or"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"+\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"-\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"*\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"**\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"/\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"//\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"%\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 4 #"\"<<\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\">>\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"&\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"|\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"^\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"~\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 3 #"\"<\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\">\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"<=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\">=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"==\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"!=\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 3 #"\"(\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\")\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"[\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"]\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"{\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"}\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 3 #"\",\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\":\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\".\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\";\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"@\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"=\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 4 #"\"+=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"-=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"*=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"/=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"//=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"%=\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 4 #"\"&=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"|=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"^=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\">>=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"<<=\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"**=\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 5 #"\"...\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"; not in lexical spec"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 4 #"\"<>\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"; not in lexical spec"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 4 #"\"->\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"; not in lexical spec"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          )"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"lang"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #">-->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"token"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"and/c"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"mk-tag?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"PUNCT"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 9 #"mk-value?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"v"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"v"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 5 #")))) "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ["
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 5 #"PUNCT"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 1 #"k"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 1 #"k"
7 #"wxtext\0"
3 4 #"]))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"     [("
7 #"wxtext\0"
3 2 #"or"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"\"False\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"\"None\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"\"True\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"and\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"as\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"\"assert\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"\"break\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 7 #"\"class\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"\"continue\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"def\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"del\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"\"elif\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"\"else\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"\"except\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 9 #"\"finally\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"for\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"\"from\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"\"global\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"if\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"\"import\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"in\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 4 #"\"is\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"\"lambda\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"\"nonlocal\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"not\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"or\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"\"pass\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"\"raise\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 8 #"\"return\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"try\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"\"while\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"\"with\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"\"yield\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"lang"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #">-->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"token"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"and/c"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"mk-tag?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 7 #"KEYWORD"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 9 #"mk-value?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"v"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"symbol->string"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"v"
7 #"wxtext\0"
3 6 #"))))) "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ["
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 7 #"KEYWORD"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 1 #"k"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 1 #"k"
7 #"wxtext\0"
3 4 #"]))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 6 #"printf"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 23 #"\"unknown literal: ~s~n\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 17 #"\"unknown literal\""
7 #"wxtext\0"
3 5 #")])))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 22 #"set-literal->language!"
0 0 22 3 1 #" "
0 0 14 3 24 #"python-literal->language"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"py-lang"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 17 #"grammar-from-file"
0 0 22 3 1 #" "
0 0 14 3 13 #"tuple_or_test"
0 0 22 3 1 #" "
0 0 19 3 19 #"\"python-ast.grm.sx\""
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #" ("
0 0 14 3 30 #"current-command-line-arguments"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 17 #"python-parse-file"
0 0 22 3 1 #" "
0 0 14 3 8 #"filename"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 17 #"python-parse-port"
0 0 22 3 2 #" ("
0 0 14 3 15 #"open-input-file"
0 0 22 3 1 #" "
0 0 14 3 8 #"filename"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 17 #"python-parse-port"
0 0 22 3 1 #" "
0 0 14 3 4 #"port"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 5 #"lines"
0 0 22 3 2 #" ("
0 0 14 3 8 #"read-all"
0 0 22 3 1 #" "
0 0 14 3 4 #"port"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"forest"
0 0 22 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 22 3 1 #" "
0 0 14 3 7 #"py-lang"
0 0 22 3 2 #" ("
0 0 14 3 12 #"list->stream"
0 0 22 3 1 #" "
0 0 14 3 5 #"lines"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 14 3 8 #"set-size"
0 0 22 3 1 #" "
0 0 14 3 6 #"forest"
0 0 22 3 2 #") "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 12 #"pretty-write"
0 0 22 3 2 #" ("
0 0 14 3 10 #"set-choose"
0 0 22 3 1 #" "
0 0 14 3 6 #"forest"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 7 #"newline"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 14 3 8 #"set-size"
0 0 22 3 1 #" "
0 0 14 3 6 #"forest"
0 0 22 3 2 #") "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 12 #"pretty-write"
0 0 22 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 7 #"newline"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 6 #"printf"
0 0 22 3 1 #" "
0 0 19 3 24 #"\"; ambiguous grammar:~n\""
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 5 #"write"
0 0 22 3 1 #" "
0 0 14 3 6 #"forest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 7 #"newline"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"  [("
0 0 14 3 6 #"vector"
0 0 22 3 1 #" "
0 0 14 3 8 #"filename"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 14 3 17 #"python-parse-file"
0 0 22 3 1 #" "
0 0 14 3 8 #"filename"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 14 3 4 #"exit"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ["
0 0 14 3 4 #"else"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 14 3 17 #"python-parse-port"
0 0 22 3 2 #" ("
0 0 14 3 15 #"open-input-file"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"test.py\""
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0           0
