#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 4781 0 26 3 12 #"#lang racket"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 44 #"; environments are sets of variables/symbols"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 9 #"empty-env"
0 0 22 3 2 #" ("
0 0 14 3 3 #"set"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 54 #"; The translator will use environments to track scope."
0 0 22 29 1 #"\n"
0 0 17 3 53 #"; When a variable is local, it is in the environment."
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 52 #";; transform-program : python-program -> hir-program"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 17 #"transform-program"
0 0 22 3 1 #" "
0 0 14 3 7 #"program"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 7 #"program"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 7 #"program"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"stmts"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"stmts*"
0 0 22 3 2 #" ("
0 0 14 3 13 #"flatten-stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"globals"
0 0 22 3 2 #" ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 1 #" "
0 0 14 3 6 #"stmts*"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 7 #"program"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 7 #"       "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 15 3 8 #"for/list"
0 0 22 3 3 #" (["
0 0 14 3 1 #"g"
0 0 22 3 1 #" "
0 0 14 3 7 #"globals"
0 0 22 3 3 #"]) "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"g"
0 0 22 3 2 #" ("
0 0 14 3 4 #"void"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"       "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"s"
0 0 22 3 3 #") ("
0 0 14 3 14 #"transform-stmt"
0 0 22 3 1 #" "
0 0 14 3 9 #"empty-env"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 3 #")) "
0 0 14 3 6 #"stmts*"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 21 #"\"not a program: ~s~n\""
0 0 22 3 1 #" "
0 0 14 3 7 #"program"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 61
#"; flattens internal compound statements into the outer block:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 13 #"flatten-stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 2 #"()"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"'"
0 0 22 3 3 #"()]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 10 #"more-stmts"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 6 #"append"
0 0 22 3 1 #" "
0 0 14 3 10 #"more-stmts"
0 0 22 3 2 #" ("
0 0 14 3 13 #"flatten-stmts"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 41 #"; matches augmented assignment operators:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 21 #"define-match-expander"
0 0 22 3 1 #" "
0 0 14 3 9 #"augassign"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 22 3 3 #" ()"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 2 #"or"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"+=\""
0 0 22 3 1 #" "
0 0 19 3 4 #"\"-=\""
0 0 22 3 1 #" "
0 0 19 3 4 #"\"*=\""
0 0 22 3 1 #" "
0 0 19 3 4 #"\"/=\""
0 0 22 3 1 #" "
0 0 19 3 4 #"\"%=\""
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 19 3 4 #"\"&=\""
0 0 22 3 1 #" "
0 0 19 3 4 #"\"|=\""
0 0 22 3 1 #" "
0 0 19 3 4 #"\"^=\""
0 0 22 3 1 #" "
0 0 19 3 5 #"\"<<=\""
0 0 22 3 1 #" "
0 0 19 3 5 #"\">>=\""
0 0 22 3 1 #" "
0 0 19 3 5 #"\"**=\""
0 0 22 3 1 #" "
0 0 19 3 5 #"\"//=\""
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 62
#"; converts an augment assignment operator to the target binop:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 16 #"select-augassign"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 4 #"\"+=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"+"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 4 #"\"-=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"-"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 4 #"\"*=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"*"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 4 #"\"/=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"/"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 4 #"\"%=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"modulo"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 4 #"\"&=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"bitwise-and"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 4 #"\"|=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"bitwise-or"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 4 #"\"^=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"bitwise-xor"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 5 #"\"<<=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"<<"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 5 #"\">>=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #">>"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 5 #"\"**=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"expt"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 19 3 5 #"\"//=\""
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"quotient"
0 0 22 3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 22 29 1 #"\n"
0 0 17 3 56 #"; determines global bindings from a group of statements:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 22 3 4 #"() ("
0 0 14 3 3 #"set"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 2 #"or"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"raise"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"expr"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"assert"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 8 #"continue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"break"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"pass"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"del"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"           "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"            "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"def"
0 0 22 3 2 #" ("
0 0 26 3 1 #","
0 0 14 3 1 #"f"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"lvals"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 9 #"augassign"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 14 3 5 #"lvals"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 8 #"nonlocal"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"vars"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"global"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"vars"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 9 #"set-union"
0 0 22 3 2 #" ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"stmts"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #" ("
0 0 26 3 1 #","
0 0 14 3 5 #"tests"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 6 #"suites"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 6 #"suites"
0 0 22 3 3 #")) "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"while"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"while"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 10 #"else-suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                             "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"for"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                              "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"for"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 10 #"else-suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 31 #"                              ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                              "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"        "
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                             "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"try"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 10 #"body-suite"
0 0 22 3 3 #" (("
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 6 #"suites"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 14 3 10 #"else-suite"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 13 #"finally-suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 10 #"body-suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 6 #"suites"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 22 3 1 #" "
0 0 14 3 13 #"finally-suite"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 13 #"finally-suite"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                             "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 43 #"\"couldn't compute global bindings for ~s~n\""
0 0 22 3 2 #" ("
0 0 14 3 3 #"car"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 50 #"; finds all of the bindings in a list of l-values:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"lvals->bindings"
0 0 22 3 1 #" "
0 0 14 3 5 #"lvals"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"lvals"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 22 3 6 #"()   ("
0 0 14 3 3 #"set"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 22 3 2 #") "
0 0 14 3 1 #"v"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 7 #"set-add"
0 0 22 3 2 #" ("
0 0 14 3 15 #"lvals->bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 2 #") "
0 0 14 3 1 #"v"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 15 #"lvals->bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 58
#"; finds all of the local bindings in a list of statements:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 22 3 4 #"() ("
0 0 14 3 3 #"set"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 2 #"or"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"raise"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"expr"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"assert"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 8 #"continue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"break"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"pass"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"               "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"del"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"           "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"            "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"def"
0 0 22 3 2 #" ("
0 0 26 3 1 #","
0 0 14 3 1 #"f"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 7 #"set-add"
0 0 22 3 2 #" ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 2 #") "
0 0 14 3 1 #"f"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"lvals"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 9 #"set-union"
0 0 22 3 2 #" ("
0 0 14 3 15 #"lvals->bindings"
0 0 22 3 1 #" "
0 0 14 3 5 #"lvals"
0 0 22 3 3 #") ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 9 #"augassign"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 14 3 5 #"lvals"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 9 #"set-union"
0 0 22 3 2 #" ("
0 0 14 3 15 #"lvals->bindings"
0 0 22 3 1 #" "
0 0 14 3 5 #"lvals"
0 0 22 3 3 #") ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 8 #"nonlocal"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"vars"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 12 #"set-subtract"
0 0 22 3 2 #" ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"global"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"vars"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 12 #"set-subtract"
0 0 22 3 2 #" ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"stmts"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #" ("
0 0 26 3 1 #","
0 0 14 3 5 #"tests"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 6 #"suites"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 6 #"suites"
0 0 22 3 3 #")) "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"while"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"while"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 10 #"else-suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                             "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"for"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                             "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"for"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 10 #"else-suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                             "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"        "
0 0 22 29 1 #"\n"
0 0 22 3 12 #"            "
0 0 22 3 17 #"                 "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"try"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 10 #"body-suite"
0 0 22 3 3 #" (("
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 6 #"suites"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 14 3 10 #"else-suite"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 13 #"finally-suite"
0 0 22 3 2 #") "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 2 #" ("
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 10 #"body-suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"append"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 6 #"suites"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 22 3 1 #" "
0 0 14 3 13 #"finally-suite"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 13 #"finally-suite"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                             "
0 0 14 3 4 #"rest"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 42 #"\"couldn't compute local bindings for ~s~n\""
0 0 22 3 2 #" ("
0 0 14 3 3 #"car"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 17 3 43 #"; generates code to set an indexed l-value:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"set-index"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"$base"
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 9 #"subscript"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"$i"
0 0 22 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"i"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"$e"
0 0 22 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"e"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"$base"
0 0 22 3 2 #"])"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"            [("
0 0 14 3 8 #"py-list?"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 4 #")  ("
0 0 14 3 12 #"py-list-set!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"            [("
0 0 14 3 6 #"tuple?"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 6 #")    ("
0 0 14 3 10 #"tuple-set!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"            [("
0 0 14 3 5 #"dict?"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 7 #")     ("
0 0 14 3 9 #"dict-set!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"            )))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"dot"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"NAME"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"set-field!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"$base"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"NAME"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 24 #"\"cannot set-index: ~s~n\""
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 47 #"; generates code to augment an indexed l-value:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 19 #"set-index-augassign"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"$base"
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 9 #"subscript"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"unfinished"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"dot"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"NAME"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"$b"
0 0 22 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 22 3 2 #" ("
0 0 14 3 7 #"set-add"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 2 #"$b"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 26 3 1 #","
0 0 14 3 2 #"$b"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"$base"
0 0 22 3 2 #"])"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 10 #"set-field!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$b"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"NAME"
0 0 22 3 2 #" ("
0 0 26 3 1 #","
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                   "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 7 #"indexed"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$b"
0 0 22 3 2 #" ("
0 0 14 3 3 #"dot"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"NAME"
0 0 22 3 7 #"))))))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 24 #"\"cannot set-index: ~s~n\""
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 46 #"; generates code to delete an indexed l-value:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 12 #"delete-index"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"$base"
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 9 #"subscript"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"unfinished"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"dot"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"NAME"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"$b"
0 0 22 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 22 3 2 #" ("
0 0 14 3 7 #"set-add"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 2 #"$b"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 26 3 1 #","
0 0 14 3 2 #"$b"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"$base"
0 0 22 3 2 #"])"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 13 #"remove-field!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$b"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"NAME"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"        "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 27 #"\"cannot delete index: ~s~n\""
0 0 22 3 1 #" "
0 0 14 3 5 #"index"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 33 #"; generates code for a statement:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-stmt"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"def"
0 0 22 3 2 #" ("
0 0 26 3 1 #","
0 0 14 3 1 #"f"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"vars"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 22 3 2 #" ("
0 0 14 3 10 #"set-remove"
0 0 22 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 22 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 2 #") "
0 0 14 3 3 #"env"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 17 #"current-exception"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 11 #"set-member?"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"set-global!"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 14 3 1 #"f"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"vars"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 7 #"call/ec"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 6 #"return"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                   "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 20 #"transform-body-suite"
0 0 22 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 2 #") "
0 0 14 3 7 #"new-env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 6 #")))))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 22 3 2 #") "
0 0 14 3 3 #"var"
0 0 22 3 3 #")) "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 11 #"set-member?"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 11 #"set-global!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 22 3 3 #" (("
0 0 14 3 7 #"indexed"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"base"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 8 #"trailers"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"index"
0 0 22 3 3 #")) "
0 0 26 3 1 #","
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 2 #";`"
0 0 17 3 1 #"("
0 0 17 3 1 #","
0 0 17 3 1 #"("
0 0 17 3 14 #"transform-expr"
0 0 17 3 1 #" "
0 0 17 3 3 #"env"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"`"
0 0 17 3 7 #"indexed"
0 0 17 3 1 #" "
0 0 17 3 4 #"base"
0 0 17 3 1 #" "
0 0 17 3 8 #"trailers"
0 0 17 3 1 #" "
0 0 17 3 9 #"index)))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"unwind-trailers"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"base"
0 0 22 3 2 #") "
0 0 14 3 8 #"trailers"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 9 #"set-index"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"base"
0 0 22 3 2 #") "
0 0 14 3 5 #"index"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 22 3 1 #" "
0 0 14 3 5 #"lvals"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 3 #")) "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"$t"
0 0 22 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"t"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"unfinished"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"                "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 22 3 1 #" "
0 0 14 3 6 #"aug-op"
0 0 22 3 2 #" ("
0 0 14 3 9 #"augassign"
0 0 22 3 4 #")) ("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 22 3 2 #") "
0 0 14 3 4 #"lval"
0 0 22 3 3 #")) "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"global?"
0 0 22 3 2 #" ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 22 3 1 #" "
0 0 14 3 4 #"lval"
0 0 22 3 3 #") ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 11 #"set-member?"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"lval"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 2 #" ("
0 0 14 3 16 #"select-augassign"
0 0 22 3 1 #" "
0 0 14 3 6 #"aug-op"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 51 #";(printf \"transforming with env ~s: ~s~n\" env expr)"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #" "
0 0 14 3 7 #"global?"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"get-global"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"lval"
0 0 22 3 2 #") "
0 0 14 3 4 #"lval"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"unfinished"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 22 3 1 #" "
0 0 14 3 6 #"aug-op"
0 0 22 3 2 #" ("
0 0 14 3 9 #"augassign"
0 0 22 3 5 #")) (("
0 0 14 3 7 #"indexed"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"base"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 8 #"trailers"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"index"
0 0 22 3 3 #")) "
0 0 26 3 1 #","
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"unfinished"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 14 3 9 #"augassign"
0 0 22 3 3 #")) "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 19 3 20 #"\"invalid assignment\""
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"del"
0 0 22 3 2 #" ("
0 0 14 3 7 #"indexed"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"base"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 8 #"trailers"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"index"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 12 #"delete-index"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"      "
0 0 14 3 3 #"env"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 7 #"indexed"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"base"
0 0 22 3 1 #" "
0 0 26 3 2 #",@"
0 0 14 3 8 #"trailers"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"      "
0 0 14 3 5 #"index"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"pass"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 5 #"break"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 5 #"break"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"continue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 8 #"continue"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 22 3 2 #" ("
0 0 14 3 4 #"void"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"exprs"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"return"
0 0 22 3 2 #" ("
0 0 14 3 5 #"tuple"
0 0 22 3 1 #" "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"a"
0 0 22 3 3 #") ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 3 #")) "
0 0 14 3 5 #"exprs"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"raise"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 5 #"throw"
0 0 22 3 1 #" "
0 0 14 3 17 #"current-exception"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"raise"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"throw"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"raise"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"ex1"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"ex2"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"      "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"throw"
0 0 22 3 2 #" ("
0 0 14 3 10 #"chain-exce"
0 0 14 3 1 #"p"
0 0 14 3 4 #"tion"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"ex1"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 31 #"                               "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"ex2"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"stmts"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 24 #"\"mis-placed begin: ~s~n\""
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"assert"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"assert"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"assert"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"expr1"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"expr2"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"assert"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"expr1"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                            "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"expr2"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"expr"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #" ["
0 0 26 3 1 #","
0 0 14 3 5 #"tests"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 6 #"suites"
0 0 22 3 2 #"] "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 9 #"otherwise"
0 0 22 3 2 #"])"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 1 #" "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 3 #") ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                  ("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 4 #"))) "
0 0 14 3 5 #"tests"
0 0 22 3 1 #" "
0 0 14 3 6 #"suites"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 9 #"otherwise"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #" ["
0 0 26 3 1 #","
0 0 14 3 5 #"tests"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 6 #"suites"
0 0 22 3 2 #"] "
0 0 14 3 1 #"."
0 0 14 3 2 #".."
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 1 #" "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 3 #") ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"t"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 35 #"                                  ("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 4 #"))) "
0 0 14 3 5 #"tests"
0 0 22 3 1 #" "
0 0 14 3 6 #"suites"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"while"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"test"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"while"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"test"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"while"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"test"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 10 #"else-suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"while"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"test"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"for"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"seq"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"$i"
0 0 22 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"i"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 8 #"for-each"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"seq"
0 0 22 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 22 3 2 #" ("
0 0 14 3 11 #"set-global!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 3 #")  "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"for"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"seq"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 10 #"else-suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"$i"
0 0 22 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"i"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 8 #"for-each"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 3 #"seq"
0 0 22 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 22 3 2 #" ("
0 0 14 3 11 #"set-global!"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"var"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 3 #")  "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"                "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 10 #"else-suite"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"try"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"suite"
0 0 22 3 4 #" ((("
0 0 14 3 6 #"except"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 14 3 9 #"on-except"
0 0 22 3 3 #")) "
0 0 20 3 2 #"#f"
0 0 22 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"try"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 9 #"on-except"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"global"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"nonlocal"
0 0 22 3 2 #") "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"_"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 29 #"\"no match for statement ~s~n\""
0 0 22 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 17 3 66
#"; a curried form of transform-stmt, useful in conjuction with map:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 19 #"transform-stmt-with"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 4 #"stmt"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 14 #"transform-stmt"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 52 #"; selects the HIR comparison op given the Python op:"
0 0 22 29 1 #"\n"
0 8         597 4 2 #"(\0"
2 #")\0"
118 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"select-cmp"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"cmp"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"cmp"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 3 #"\"<\""
7 #"wxtext\0"
3 3 #"   "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"<"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 3 #"\">\""
7 #"wxtext\0"
3 3 #"   "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #">"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"\"==\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"\">=\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #">="
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"\"<=\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"\"!=\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 10 #"not-equal?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"\"in\""
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"in?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"\"is\""
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 8 #"\"not-in\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 7 #"not-in?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 8 #"\"is-not\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 7 #"not-eq?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"in"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"in?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"is"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 6 #"not-in"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 7 #"not-in?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 6 #"is-not"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 7 #"not-eq?"
7 #"wxtext\0"
3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 47 #"; selects the HIR shift op given the Python op:"
0 0 22 29 1 #"\n"
0 8         142 4 2 #"(\0"
2 #")\0"
27 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 5 #"efine"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"select-shift"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"\"<<\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"<<"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"\">>\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #">>"
7 #"wxtext\0"
3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 52 #"; selects the HIR arithmetic op given the Python op:"
0 0 22 29 1 #"\n"
0 8         147 4 2 #"(\0"
2 #")\0"
28 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 4 #"fine"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"select-arith"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 3 #"\"-\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 3 #"\"+\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 46 #"; selects the HIR term op given the Python op:"
0 0 22 29 1 #"\n"
0 8         217 4 2 #"(\0"
2 #")\0"
42 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"de"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 3 #"ine"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"select-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 3 #"\"*\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 3 #"\"%\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 6 #"modulo"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 3 #"\"/\""
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"\"//\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 8 #"quotient"
7 #"wxtext\0"
3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 17 3 53 #"; unfolds a comparison exp in Python into an HIR exp:"
0 0 22 29 1 #"\n"
0 8         542 4 2 #"(\0"
2 #")\0"
107 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 17 #"unwind-comparison"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"expr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ops"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ops"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"() "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 14 #"transform-expr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"expr"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 2 #"(("
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"cmp"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"rhs"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 10 #"unfinished"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"cmp"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"rhs"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"$cv"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"gensym"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"cv"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"new-env"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"set-add"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"$cv"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 10 #"unfinished"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 19 #"\"no match: ~s ~s~n\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"expr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ops"
7 #"wxtext\0"
3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 52 #"; unfolds a binary op exp in Python into an HIR exp:"
0 0 22 29 1 #"\n"
0 8         597 4 2 #"(\0"
2 #")\0"
118 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"unwind-op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"select-op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"$expr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ops"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ops"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"() "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 14 #"transform-expr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"$expr"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 2 #"(("
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"rhs"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"     "
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 9 #"select-op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"       "
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 5 #"$expr"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"       "
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 14 #"transform-expr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"rhs"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"rhs"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 9 #"unwind-op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"select-op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"                "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"                "
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 9 #"select-op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 5 #"$expr"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 34 #"                                  "
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 14 #"transform-expr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"rhs"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"                "
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 45 #"; unfolds a trailer in Python into an HIR ep:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 14 #"unwind-trailer"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"$expr"
0 0 22 3 1 #" "
0 0 14 3 7 #"trailer"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 7 #"trailer"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"dot"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"NAME"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 9 #"get-field"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"$expr"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"NAME"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 6 #"called"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"unfinished"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 9 #"subscript"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 1 #"i"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"$i"
0 0 22 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"i"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"$e"
0 0 22 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"e"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"$expr"
0 0 22 3 2 #"])"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"i"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"            [("
0 0 14 3 8 #"py-list?"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 4 #")  ("
0 0 14 3 11 #"py-list-ref"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"            [("
0 0 14 3 6 #"tuple?"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 6 #")    ("
0 0 14 3 9 #"tuple-ref"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"            [("
0 0 14 3 5 #"dict?"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 7 #")     ("
0 0 14 3 8 #"dict-ref"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$e"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 2 #"$i"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 22 3 13 #"            ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 19 3 21 #"\"cannot index object\""
0 0 22 3 6 #")])))]"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 23 #"\"unknown trailer: ~s~n\""
0 0 22 3 1 #" "
0 0 14 3 7 #"trailer"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 17 3 49 #"; unfolds a sequence of trailers into an HIR exp:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"unwind-trailers"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"$expr"
0 0 22 3 1 #" "
0 0 14 3 8 #"trailers"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 8 #"trailers"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 22 3 3 #"() "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 14 3 5 #"$expr"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 7 #"trailer"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 14 #"unwind-trailer"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"$expr"
0 0 22 3 1 #" "
0 0 14 3 7 #"trailer"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"       "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 7 #"trailer"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 7 #"trailer"
0 0 22 3 1 #" "
0 0 14 3 4 #"rest"
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 3 22 #"                      "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 17 3 42 #"; transforms a Python exp into an HIR exp:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 14 3 5 #"print"
0 0 22 3 7 #"       "
0 0 20 3 1 #"'"
0 0 14 3 8 #"py-print"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 14 3 4 #"True"
0 0 22 3 8 #"        "
0 0 20 3 2 #"#t"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 14 3 5 #"False"
0 0 22 3 7 #"       "
0 0 20 3 2 #"#f"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 14 3 8 #"Ellipsis"
0 0 22 3 4 #"    "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 22 3 1 #" "
0 0 14 3 8 #"Ellipsis"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"'"
0 0 14 3 4 #"None"
0 0 22 3 8 #"        "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 22 3 1 #" "
0 0 14 3 4 #"None"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 3 #")  "
0 0 14 3 4 #"expr"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 7 #"string?"
0 0 22 3 3 #")  "
0 0 14 3 4 #"expr"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 22 3 3 #")  "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 11 #"set-member?"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 14 3 4 #"expr"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"get-global"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 15 3 4 #"cond"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 15 3 4 #"cond"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"vars"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 22 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 14 3 4 #"vars"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"vars"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 2 #" ("
0 0 14 3 2 #"or"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"or"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"and"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"bitwise-or"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"bitwise-and"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"bitwise-xor"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 7 #"       "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"exprs"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"a"
0 0 22 3 3 #") ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 3 #")) "
0 0 14 3 5 #"exprs"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"      "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 10 #"comparison"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"base"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"ops"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 9 #"unwind-op"
0 0 22 3 1 #" "
0 0 14 3 10 #"select-cmp"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"base"
0 0 22 3 2 #") "
0 0 14 3 3 #"ops"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"shift"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"base"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"ops"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 9 #"unwind-op"
0 0 22 3 1 #" "
0 0 14 3 12 #"select-shift"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"base"
0 0 22 3 2 #") "
0 0 14 3 3 #"ops"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"arith"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"base"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"ops"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 9 #"unwind-op"
0 0 22 3 1 #" "
0 0 14 3 12 #"select-arith"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"base"
0 0 22 3 2 #") "
0 0 14 3 3 #"ops"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"term"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"base"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"ops"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 9 #"unwind-op"
0 0 22 3 1 #" "
0 0 14 3 11 #"select-term"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"base"
0 0 22 3 2 #") "
0 0 14 3 3 #"ops"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 19 3 3 #"\"+\""
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 19 3 3 #"\"-\""
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 19 3 3 #"\"~\""
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 11 #"bitwise-not"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 7 #"indexed"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expr"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 8 #"trailers"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 15 #"unwind-trailers"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 2 #") "
0 0 14 3 8 #"trailers"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"power"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"base"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"expn"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"expt"
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"base"
0 0 22 3 2 #") "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 4 #"expn"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"exprs"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"a"
0 0 22 3 3 #") ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 3 #")) "
0 0 14 3 5 #"exprs"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"tuple"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"exprs"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"tuple"
0 0 22 3 1 #" "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"a"
0 0 22 3 3 #") ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 3 #")) "
0 0 14 3 5 #"exprs"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"exprs"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 8 #"py-list*"
0 0 22 3 1 #" "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"a"
0 0 22 3 3 #") ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 3 #")) "
0 0 14 3 5 #"exprs"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"dict"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"pairs"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 4 #"dict"
0 0 22 3 1 #" "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"a"
0 0 22 3 3 #") ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 3 #"car"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 4 #")) ("
0 0 14 3 14 #"transform-expr"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 5 #")))) "
0 0 14 3 5 #"pairs"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"       "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 9 #"         "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 5 #"error"
0 0 22 3 2 #" ("
0 0 14 3 6 #"format"
0 0 22 3 1 #" "
0 0 19 3 29 #"\"cannot transform expr: ~s~n\""
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 46 #"; transform a suite into a list of statements:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 12 #"suite->stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 14 3 5 #"suite"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"stmts"
0 0 22 3 2 #") "
0 0 14 3 5 #"stmts"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 5 #"stmts"
0 0 22 3 2 #") "
0 0 14 3 5 #"stmts"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"stmt"
0 0 22 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 14 3 4 #"stmt"
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 22 29 1 #"\n"
0 0 17 3 44 #"; transform a suite that begins a new scope:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 20 #"transform-body-suite"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"suite"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 15 3 5 #"begin"
0 0 22 3 2 #") "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 3 #"app"
0 0 22 3 1 #" "
0 0 14 3 13 #"flatten-stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"locals"
0 0 22 3 3 #"  ("
0 0 14 3 14 #"local-bindings"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"globals"
0 0 22 3 2 #" ("
0 0 14 3 15 #"global-bindings"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 22 3 2 #" ("
0 0 14 3 12 #"set-subtract"
0 0 22 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 22 3 1 #" "
0 0 14 3 6 #"locals"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #") "
0 0 14 3 7 #"globals"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 2 #" ("
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 15 3 8 #"for/list"
0 0 22 3 3 #" (["
0 0 14 3 1 #"v"
0 0 22 3 2 #" ("
0 0 14 3 12 #"set-subtract"
0 0 22 3 1 #" "
0 0 14 3 6 #"locals"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 14 3 1 #"v"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"        "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 22 3 2 #" ("
0 0 14 3 1 #"s"
0 0 22 3 3 #") ("
0 0 14 3 14 #"transform-stmt"
0 0 22 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 3 #")) "
0 0 14 3 5 #"stmts"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-stmt"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 52 #"; transform a suite that does not begin a new scope:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"transform-suite"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"suite"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 15 3 5 #"begin"
0 0 22 3 2 #") "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 22 3 1 #"("
0 0 14 3 3 #"app"
0 0 22 3 1 #" "
0 0 14 3 13 #"flatten-stmts"
0 0 22 3 1 #" "
0 0 14 3 5 #"stmts"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 4 #"; =>"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 3 3 #" ()"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"        "
0 0 26 3 2 #",@"
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 14 3 19 #"transform-stmt-with"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 2 #") "
0 0 14 3 5 #"stmts"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"        "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 14 #"transform-stmt"
0 0 22 3 1 #" "
0 0 14 3 3 #"env"
0 0 22 3 1 #" "
0 0 14 3 5 #"suite"
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 5 #"match"
0 0 22 3 2 #" ("
0 0 14 3 30 #"current-command-line-arguments"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"  [("
0 0 14 3 6 #"vector"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"in"
0 0 22 3 2 #" ("
0 0 14 3 18 #"current-input-port"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #" ("
0 0 14 3 4 #"read"
0 0 22 3 1 #" "
0 0 14 3 2 #"in"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"pretty-write"
0 0 22 3 2 #" ("
0 0 14 3 17 #"transform-program"
0 0 22 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 22 29 1 #"\n"
0           0
